http://cygwin.com/ml/cygwin-apps/2013-07/msg00362.html

--- origsrc/Python-3.2.5/Include/pythread.h	2013-05-15 11:33:42.000000000 -0500
+++ src/Python-3.2.5/Include/pythread.h	2013-07-30 18:31:53.768781800 -0500
@@ -75,11 +75,11 @@ PyAPI_FUNC(size_t) PyThread_get_stacksiz
 PyAPI_FUNC(int) PyThread_set_stacksize(size_t);
 
 /* Thread Local Storage (TLS) API */
-PyAPI_FUNC(int) PyThread_create_key(void);
-PyAPI_FUNC(void) PyThread_delete_key(int);
-PyAPI_FUNC(int) PyThread_set_key_value(int, void *);
-PyAPI_FUNC(void *) PyThread_get_key_value(int);
-PyAPI_FUNC(void) PyThread_delete_key_value(int key);
+PyAPI_FUNC(long) PyThread_create_key(void);
+PyAPI_FUNC(void) PyThread_delete_key(long);
+PyAPI_FUNC(int) PyThread_set_key_value(long, void *);
+PyAPI_FUNC(void *) PyThread_get_key_value(long);
+PyAPI_FUNC(void) PyThread_delete_key_value(long key);
 
 /* Cleanup after a fork */
 PyAPI_FUNC(void) PyThread_ReInitTLS(void);
--- origsrc/Python-3.2.5/Python/pystate.c	2013-05-15 11:33:57.000000000 -0500
+++ src/Python-3.2.5/Python/pystate.c	2013-07-30 18:38:48.685513700 -0500
@@ -37,7 +37,7 @@ static PyThread_type_lock head_mutex = N
    GILState implementation
 */
 static PyInterpreterState *autoInterpreterState = NULL;
-static int autoTLSkey = 0;
+static long autoTLSkey = 0;
 #else
 #define HEAD_INIT() /* Nothing */
 #define HEAD_LOCK() /* Nothing */
--- origsrc/Python-3.2.5/Python/thread_pthread.h	2013-05-15 11:33:57.000000000 -0500
+++ src/Python-3.2.5/Python/thread_pthread.h	2013-07-30 18:37:46.092933600 -0500
@@ -603,28 +603,28 @@ _pythread_pthread_set_stacksize(size_t s
 
 #define Py_HAVE_NATIVE_TLS
 
-int
+long
 PyThread_create_key(void)
 {
     pthread_key_t key;
     int fail = pthread_key_create(&key, NULL);
-    return fail ? -1 : key;
+    return fail ? (long) -1 : (long) key;
 }
 
 void
-PyThread_delete_key(int key)
+PyThread_delete_key(long key)
 {
     pthread_key_delete(key);
 }
 
 void
-PyThread_delete_key_value(int key)
+PyThread_delete_key_value(long key)
 {
     pthread_setspecific(key, NULL);
 }
 
 int
-PyThread_set_key_value(int key, void *value)
+PyThread_set_key_value(long key, void *value)
 {
     int fail;
     void *oldValue = pthread_getspecific(key);
@@ -635,7 +635,7 @@ PyThread_set_key_value(int key, void *va
 }
 
 void *
-PyThread_get_key_value(int key)
+PyThread_get_key_value(long key)
 {
     return pthread_getspecific(key);
 }
