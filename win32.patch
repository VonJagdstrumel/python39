--- origsrc/Python-3.9.0b5/Include/pyerrors.h
+++ src/Python-3.9.0b5/Include/pyerrors.h
@@ -183,7 +181,6 @@ PyAPI_FUNC(PyObject *) PyErr_FormatV(
     va_list vargs);
 #endif
 
-#ifdef MS_WINDOWS
 PyAPI_FUNC(PyObject *) PyErr_SetFromWindowsErrWithFilename(
     int ierr,
     const char *filename        /* decoded from the filesystem encoding */
@@ -201,7 +198,6 @@ PyAPI_FUNC(PyObject *) PyErr_SetExcFromW
     const char *filename        /* decoded from the filesystem encoding */
     );
 PyAPI_FUNC(PyObject *) PyErr_SetExcFromWindowsErr(PyObject *, int);
-#endif /* MS_WINDOWS */
 
 #if !defined(Py_LIMITED_API) || Py_LIMITED_API+0 >= 0x03060000
 PyAPI_FUNC(PyObject *) PyErr_SetImportErrorSubclass(PyObject *, PyObject *,
--- origsrc/Python-3.9.0b5/Modules/Setup
+++ src/Python-3.9.0b5/Modules/Setup
@@ -370,3 +370,5 @@ xxsubtype xxsubtype.c
 #
 #_sqlite3 _tkinter _curses pyexpat
 #_codecs_jp _codecs_kr _codecs_tw unicodedata
+
+winreg ../PC/winreg.c
--- origsrc/Python-3.9.0b5/Modules/_ctypes/cfield.c
+++ src/Python-3.9.0b5/Modules/_ctypes/cfield.c
@@ -684,7 +684,6 @@ i_get_sw(void *ptr, Py_ssize_t size)
     return PyLong_FromLong(val);
 }
 
-#ifdef MS_WIN32
 /* short BOOL - VARIANT_BOOL */
 static PyObject *
 vBOOL_set(void *ptr, PyObject *value, Py_ssize_t size)
@@ -693,10 +692,10 @@ vBOOL_set(void *ptr, PyObject *value, Py_ssize_t size)
     case -1:
         return NULL;
     case 0:
-        *(short int *)ptr = VARIANT_FALSE;
+        *(short int *)ptr = 0;
         _RET(value);
     default:
-        *(short int *)ptr = VARIANT_TRUE;
+        *(short int *)ptr = -1;
         _RET(value);
     }
 }
@@ -706,7 +705,6 @@ vBOOL_get(void *ptr, Py_ssize_t size)
 {
     return PyBool_FromLong((long)*(short int *)ptr);
 }
-#endif
 
 static PyObject *
 bool_set(void *ptr, PyObject *value, Py_ssize_t size)
@@ -1538,8 +1536,8 @@ static struct fielddesc formattable[] = {
 #endif
 #ifdef MS_WIN32
     { 'X', BSTR_set, BSTR_get, &ffi_type_pointer},
-    { 'v', vBOOL_set, vBOOL_get, &ffi_type_sshort},
 #endif
+    { 'v', vBOOL_set, vBOOL_get, &ffi_type_sshort},
 #if SIZEOF__BOOL == 1
     { '?', bool_set, bool_get, &ffi_type_uchar}, /* Also fallback for no native _Bool support */
 #elif SIZEOF__BOOL == SIZEOF_SHORT
--- origsrc/Python-3.9.0b5/Modules/socketmodule.h
+++ src/Python-3.9.0b5/Modules/socketmodule.h
@@ -8,9 +8,7 @@
 #   include <sys/socket.h>
 # endif
 # include <netinet/in.h>
-# if !defined(__CYGWIN__)
 #  include <netinet/tcp.h>
-# endif
 
 #else /* MS_WINDOWS */
 # include <winsock2.h>
--- origsrc/Python-3.9.0b5/PC/winreg.c
+++ src/Python-3.9.0b5/PC/winreg.c
@@ -15,7 +15,7 @@
 #define PY_SSIZE_T_CLEAN
 #include "Python.h"
 #include "structmember.h"         // PyMemberDef
-#include <windows.h>
+#include <w32api/windows.h>
 
 static BOOL PyHKEY_AsHKEY(PyObject *ob, HKEY *pRes, BOOL bNoneOK);
 static BOOL clinic_HKEY_converter(PyObject *ob, void *p);
--- origsrc/Python-3.9.0b5/Python/errors.c
+++ src/Python-3.9.0b5/Python/errors.c
@@ -14,10 +14,8 @@
 #endif
 #endif

-#ifdef MS_WINDOWS
-#include <windows.h>
-#include <winbase.h>
-#endif
+#include <w32api/windows.h>
+#include <w32api/winbase.h>

 #include <ctype.h>

@@ -790,7 +786,6 @@ PyErr_SetFromErrno(PyObject *exc)
     return PyErr_SetFromErrnoWithFilenameObjects(exc, NULL, NULL);
 }

-#ifdef MS_WINDOWS
 /* Windows specific error code handling */
 PyObject *PyErr_SetExcFromWindowsErrWithFilenameObject(
     PyObject *exc,
@@ -932,7 +927,6 @@ PyObject *PyErr_SetFromWindowsErrWithUni
     Py_XDECREF(name);
     return result;
 }
-#endif /* MS_WINDOWS */

 PyObject *
 PyErr_SetImportErrorSubclass(PyObject *exception, PyObject *msg,
